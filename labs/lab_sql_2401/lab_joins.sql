-- Write SQL queries to perform the following tasks using the Sakila database:

-- List the number of films per category.

use sakila;

select category.name, count(film_id)
from category
left join film_category on category.category_id=film_category.category_id
group by film_category.category_id, category.name;


-- Retrieve the store ID, city, and country for each store.
select store.store_id, city.city, country.country
from store
left join address
using (address_id)
left join city
using(city_id)
left join country
using (country_id);

-- Calculate the total revenue generated by each store in dollars.
select store.store_id, sum(payment.amount)
from store
left join staff
using (store_id)
left join payment
using(staff_id)
group by store.store_id;

-- Determine the average running time of films for each category.

select category.name, avg(film.length)
from category
left join film_category
using(category_id)
left join film
using(film_id)
group by category.name;

-- BONUS
-- Identify the film categories with the longest average running time.
select category.name, avg(film.length)
from category
left join film_category
using(category_id)
left join film
using(film_id)
group by category.name
order by avg(film.length) desc
limit 3;

-- Display the top 10 most frequently rented movies in descending order.
select film.title, count(rental_id)
from film
left join inventory
using(film_id)
left join rental
using (inventory_id)
group by film.title
order by count(rental_id) desc
limit 10;

-- Determine if "Academy Dinosaur" can be rented from Store 1.
select *
from film
left join inventory
using (film_id)
where title='Academy Dinosaur'
and inventory.store_id=1;

-- Provide a list of all distinct film titles, along with their availability status in the inventory. 
-- Include a column indicating whether each title is 'Available' or 'NOT available.' 
-- Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."

select distinct(film.title), 
case
	when count(inventory.inventory_id)>=1 then 'Available'
    else 'Not Available'
end as availability
from film
left join inventory
using (film_id)
group by film.title;
